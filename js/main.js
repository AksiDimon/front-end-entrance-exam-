/* global html2PDF */

const btn = document.getElementById('download-btn');
const page = document.getElementById('page');
console.log(btn, page, 'üòç')

btn.addEventListener('click', function(){
  html2PDF(page, {
    jsPDF: {
      format: 'a4',
    },
    margin: {
      top: 50,
      right: 50,
      bottom: 50,
      left: 50,
    },
    imageType: 'image/jpeg',
    output: './pdf/generate.pdf'
  });
});


// main.js

// –ö–ª—é—á –≤ localStorage
const STORAGE_KEY = 'resumeData';

// –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
function getEditableFields() {
  return Array.from(document.querySelectorAll('[contenteditable="true"]'))
    // —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ–≥–æ –µ—Å—Ç—å id
    .filter(el => el.id);
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö –ø–æ–ª–µ–π
function saveAllFields() {
  const data = {};
  getEditableFields().forEach(el => {
    data[el.id] = el.innerText.trim();
  });
  localStorage.setItem(STORAGE_KEY, JSON.stringify(data));
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è
function loadAllFields() {
  const raw = localStorage.getItem(STORAGE_KEY);
  if (!raw) return;
  const data = JSON.parse(raw);
  getEditableFields().forEach(el => {
    if (data[el.id] != null) {
      el.innerText = data[el.id];
    }
  });
}


// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏
document.addEventListener('DOMContentLoaded', () => {
  // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ
  loadAllFields();

  // –ù–∞ –∫–∞–∂–¥–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
  getEditableFields().forEach(el => {
    // –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 'input' –∏–ª–∏ 'blur'
    el.addEventListener('input', saveAllFields);
    // –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞:
    // el.addEventListener('blur', saveAllFields);
  });
});

